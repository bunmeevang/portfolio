{"version":3,"sources":["Components/Cat/Cat.js","Components/Header/Header.js","Components/Breed/Breed.js","Components/Content/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Cat","useState","url","setUrl","fetch_data","fetch","then","res","ok","json","Error","networkError","console","log","message","jsonRes","useEffect","className","alt","src","onClick","Header","to","Breed","breedUrl","setBreedUrl","headers","map","breed","i","id","name","Content","undefined","image","description","temperament","origin","life_span","adaptability","affection_level","child_friendly","dog_friendly","energy_level","App","exact","path","component","render","FunCat","breedData","filter","p","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8353e4d.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport './Cat.css';\n\nfunction Cat() {\n    const [url, setUrl] = useState('')\n    \n    useEffect(()=>{\n    fetch_data()\n    }, []);\n    \n    function fetch_data(){\n        fetch('https://api.thecatapi.com/v1/images/search').then(res=>{\n            if(res.ok){\n                return res.json();\n            }\n            throw new Error('Request Failed')\n        },networkError=> console.log(networkError.message)\n        ).then(jsonRes=>{\n            setUrl(jsonRes[0].url)\n        })\n    }\n    return (\n        <div className=\"catMain\">\n            <img alt='text' src={url} className=\"catUrl\"/>\n            <button className=\"catButton\" onClick={fetch_data}>More Cats</button>\n            <p className=\"homeDes\">Enjoy all the awesome pictures of the cat and check out all the cool different cat breeds too.</p>\n        </div>\n    )\n}\n\nexport default Cat","import React from 'react';\nimport './Header.css';\nimport { Link} from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <div className=\"header-main\">\n            <h1 className=\"cats\">Cats</h1>\n            <Link to=\"/\" className=\"homeLink\">Home</Link>\n            <Link to=\"/breed\" className=\"breedLink\">Breeds</Link>\n        </div>\n    )\n}\n\nexport default Header","import React, {useState, useEffect} from \"react\";\nimport { Link } from 'react-router-dom';\nimport './Breed.css';\n\nconst url = 'https://api.thecatapi.com/v1/breeds';\n\nfunction Breed() {\n    const [ breedUrl, setBreedUrl ] = useState([])\n\n    function fetch_data(){\n        fetch(url, {\n            headers: {\n                'x-api-key': '8ce8c2fe-3566-47a6-80bb-8e8492cc8ac2'\n            }\n        }).then(res=>{\n            if(res.ok){\n                return res.json();\n            }\n            throw new Error('Request Failed')\n        },networkError=> console.log(networkError.message)\n        ).then(jsonRes=>{\n            // console.log(jsonRes)\n            setBreedUrl(jsonRes)\n        })\n    }\n\n    useEffect(()=>{\n        fetch_data()\n        }, []);\n\n    return (\n        <div>\n            <h2 className=\"catBreeds\">Cat Breeds</h2>\n            <div className=\"breed2\">\n            {breedUrl.map((breed, i) => {\n                return (\n                    <div key={i}>\n                        <Link to={`/${breed.id}`} className=\"breedId\">\n                            <h2 className=\"breed\">{breed.name}</h2>\n                        </Link>\n                        \n                    </div>    \n                )\n            })}      \n            </div>\n        </div>\n    )\n}\n\nexport default Breed","import React from \"react\";\nimport './Content.css'\n\n\nexport default function Content({breed}) {\nif (breed === undefined) {\n    return <h1>loading...</h1>\n}\n    return (\n        <div className=\"content\">\n            <img alt='text' src={breed.image.url} className=\"catImage\"/>\n            <h2 className=\"breedName\">{breed.name}</h2>\n            <div className=\"borderBox\">\n                <div className=\"DesBox\">\n                <p className=\"catInfo\">Description: {breed.description}</p>\n                </div>\n                <div className=\"pBox\">\n                <p className=\"catInfo\">Temperament {breed.temperament}</p>\n                <p className=\"catInfo\">Origin: {breed.origin}</p>\n                <p className=\"catInfo\">Life span: {breed.life_span}</p>\n                <p className=\"catInfo\">Adaptability: {breed.adaptability}/5</p>\n                <p className=\"catInfo\">Affection level: {breed.affection_level}/5</p>\n                <p className=\"catInfo\">Child friendly: {breed.child_friendly}/5</p>\n                <p className=\"catInfo\">Dog friendly: {breed.dog_friendly}/5</p>\n                <p className=\"catInfo\">Energy level: {breed.energy_level}/5</p>\n                </div>\n            </div>\n\n        </div>\n    )\n}","import './App.css';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Cat from './Components/Cat/Cat';\nimport Header from './Components/Header/Header';\nimport Breed from './Components/Breed/Breed';\nimport Footer from './Components/Footer/Footer'\nimport Content from \"./Components/Content/Content\";\nimport { useEffect, useState } from 'react';\n\nconst url = 'https://api.thecatapi.com/v1/breeds';\n\nfunction App() {\n  const [ breedUrl, setBreedUrl ] = useState([])\n\n  function fetch_data(){\n      fetch(url, {\n          headers: {\n              'x-api-key': '8ce8c2fe-3566-47a6-80bb-8e8492cc8ac2'\n          }\n      }).then(res=>{\n          if(res.ok){\n              return res.json();\n          }\n          throw new Error('Request Failed')\n      },networkError=> console.log(networkError.message)\n      ).then(jsonRes=>{\n          // console.log(jsonRes)\n          setBreedUrl(jsonRes)\n      })\n  }\n\n  useEffect(()=>{\n      fetch_data()\n      }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        {/* <Link to=\"/\">Home</Link>\n        <Link to=\"/breed\">Breeds</Link> */}\n        {/* <Cat /> */}\n        <Switch>\n          <Route exact path=\"/\" component={Cat} />\n          <Route exact path=\"/breed\" component={Breed} />\n          <Route\n            path=\"/:id\"\n            render={(FunCat) => {\n              // console.log(FunCat);\n              const breedData = [...breedUrl].filter(\n                (p) => p.id === FunCat.match.params.id\n               ); //console.log(breedData)\n              return <Content {...FunCat} breed={breedData[0]} />;\n            }}\n            />\n        </Switch>\n        {/* <Footer /> */}\n      </Router>\n    </div>\n  );\n}\n\n\n// render={routerProps => { \n// return <Breed{...routerProps} name = {routerProps.match.params.name}/>\n// (b) => b.id === routerProps.match.params.id\n// /> \n  \n//   return (\n//     <Router>\n//       <nav>\n//         {routes.map(route => <Link key={route.key} to={route.path}>{route.key}</Link>)}\n//       </nav>\n//       <Switch>\n//         {\n//           routes.map(({key, Component, path}) => (\n//             <Route\n//               key={key}\n//               path={path}\n//               component={props => <Component {...props} page={key} />}\n//               />))\n//         }\n//       </Switch>\n//     </Router>\n//   )\n// }\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}